@using WebApp.Authentication
@inject NavigationManager NavManager
@inject AuthenticationStateProvider AuthStateProvider

<MudNavMenu class="flex-column">
    <MudNavLink href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
    <MudNavLink href="counter" Icon="@Icons.Material.Filled.Numbers">Counter</MudNavLink>
    <AuthorizeView>
        <Authorized>
            <MudDivider/>
            <MudNavLink href="projects" Icon="@Icons.Material.Filled.Folder">Projects</MudNavLink>
            <MudNavLink href="tasks" Icon="@Icons.Material.Filled.Task">Tasks</MudNavLink>
            <MudDivider/>
            <MudNavLink Icon="@Icons.Material.Filled.Logout" @onclick="HandleLogout">Logout</MudNavLink>
        </Authorized>
    </AuthorizeView>
</MudNavMenu>

@code {

    private async Task HandleLogout()
    {
        await ((CustomAuthStateProvider)AuthStateProvider).MarkUserAsLoggedOut();
        NavManager.NavigateTo("/", forceLoad: true);
    }

}